name: Tests

on: [push, pull_request]

jobs:
  pylint-errors-only:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    - name: Run pylint
      run: |
        pylint -E ./pyrefact

  check:
    needs: [pylint-errors-only]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13.0-alpha.4", "pypy3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Running unit tests
      run: |
        python ./tests/main.py
    - name: Running on self with --safe, -s, --preserve . and variants thereof
      run: |
        pyrefact . --safe
        python -m pyrefact . -s
        python -m pyrefact . --preserve .
        pyrefact . -p .
        pyrefact . --safe --preserve .
        python -m pyrefact . -sp .
        cat ./pyrefact/main.py | python -m pyrefact --from-stdin
    - name: Install as editable
      run: |
        pip install -e .
    - name: Rerun unit tests
      run: |
        python ./tests/main.py

  check-macos:
    needs: [pylint-errors-only]
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Running unit tests
      run: python ./tests/main.py
    - name: Run on self
      run: pyrefact . --safe --preserve .
    - name: Rerun unit tests
      run: python ./tests/main.py

  check-windows:
    needs: [pylint-errors-only]
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Running unit tests
      run: python ./tests/main.py
    - name: Run on self
      run: pyrefact . --safe --preserve .
    - name: Rerun unit tests
      run: python ./tests/main.py

  check-slow:
    needs: [pylint-errors-only]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Formatting numpy repo
      run: |
        ./tests/numpy.sh

  deploy:
    environment: deploy
    needs: [pylint-errors-only, check, check-macos, check-windows]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: technote-space/get-diff-action@v6
      with:
        FILES: |
          pyproject.toml
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      if: env.GIT_DIFF && env.MATCHED_FILES
      uses: pypa/gh-action-pypi-publish@e53eb8b103ffcb59469888563dc324e3c8ba6f06
      with:
        user: __token__
        password: ${{ secrets.PYPI_DEPLOY_TOKEN_MAINONLY }}
